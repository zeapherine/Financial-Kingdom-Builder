version: '3.8'

services:
  # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: api-gateway
        PORT: 3000
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - TRADING_SERVICE_URL=http://trading-service:3001
      - GAMIFICATION_SERVICE_URL=http://gamification-service:3002
      - EDUCATION_SERVICE_URL=http://education-service:3003
      - SOCIAL_SERVICE_URL=http://social-service:3004
      - NOTIFICATION_SERVICE_URL=http://notification-service:3005
      - JWT_SECRET=dev-secret-change-in-production
      - POSTGRES_URL=postgresql://financial_kingdom:financial_kingdom_password@postgres:5432/financial_kingdom
      - REDIS_URL=redis://:financial_kingdom_redis_password@redis:6379
      - MONGODB_URL=mongodb://financial_kingdom:financial_kingdom_mongodb_password@mongodb:27017/financial_kingdom?authSource=admin
    depends_on:
      - postgres
      - redis
      - mongodb
      - trading-service
      - gamification-service
      - education-service
      - social-service
      - notification-service
    networks:
      - financial-kingdom-network

  # Trading Service
  trading-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: trading
        PORT: 3001
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - POSTGRES_URL=postgresql://financial_kingdom:financial_kingdom_password@postgres:5432/financial_kingdom
      - REDIS_URL=redis://:financial_kingdom_redis_password@redis:6379
    depends_on:
      - postgres
      - redis
    networks:
      - financial-kingdom-network

  # Gamification Service
  gamification-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: gamification
        PORT: 3002
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - PORT=3002
      - POSTGRES_URL=postgresql://financial_kingdom:financial_kingdom_password@postgres:5432/financial_kingdom
      - REDIS_URL=redis://:financial_kingdom_redis_password@redis:6379
    depends_on:
      - postgres
      - redis
    networks:
      - financial-kingdom-network

  # Education Service
  education-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: education
        PORT: 3003
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - PORT=3003
      - POSTGRES_URL=postgresql://financial_kingdom:financial_kingdom_password@postgres:5432/financial_kingdom
      - MONGODB_URL=mongodb://financial_kingdom:financial_kingdom_mongodb_password@mongodb:27017/financial_kingdom?authSource=admin
    depends_on:
      - postgres
      - mongodb
    networks:
      - financial-kingdom-network

  # Social Service
  social-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: social
        PORT: 3004
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=development
      - PORT=3004
      - POSTGRES_URL=postgresql://financial_kingdom:financial_kingdom_password@postgres:5432/financial_kingdom
      - REDIS_URL=redis://:financial_kingdom_redis_password@redis:6379
    depends_on:
      - postgres
      - redis
    networks:
      - financial-kingdom-network

  # Notification Service
  notification-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: notifications
        PORT: 3005
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=development
      - PORT=3005
    depends_on:
      - postgres
      - redis
      - mongodb
    networks:
      - financial-kingdom-network

  # PostgreSQL Database with TimescaleDB
  postgres:
    image: timescale/timescaledb:latest-pg15
    container_name: financial-kingdom-postgres
    environment:
      - POSTGRES_DB=financial_kingdom
      - POSTGRES_USER=financial_kingdom
      - POSTGRES_PASSWORD=financial_kingdom_password
      - POSTGRES_MULTIPLE_DATABASES=financial_kingdom,financial_kingdom_test
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
      - ./database/migrations:/migrations
    networks:
      - financial-kingdom-network
    command: [
      "postgres",
      "-c", "shared_preload_libraries=timescaledb",
      "-c", "max_connections=200",
      "-c", "shared_buffers=256MB",
      "-c", "effective_cache_size=1GB",
      "-c", "maintenance_work_mem=64MB",
      "-c", "checkpoint_completion_target=0.9",
      "-c", "wal_buffers=16MB",
      "-c", "default_statistics_target=100",
      "-c", "random_page_cost=1.1",
      "-c", "effective_io_concurrency=200"
    ]

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: financial-kingdom-redis
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=financial_kingdom_redis_password
    volumes:
      - redis_data:/data
    networks:
      - financial-kingdom-network
    command: redis-server --requirepass financial_kingdom_redis_password --maxmemory 512mb --maxmemory-policy allkeys-lru

  # MongoDB
  mongodb:
    image: mongo:7
    container_name: financial-kingdom-mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=financial_kingdom
      - MONGO_INITDB_ROOT_PASSWORD=financial_kingdom_mongodb_password
      - MONGO_INITDB_DATABASE=financial_kingdom
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./database/mongodb-init:/docker-entrypoint-initdb.d
    networks:
      - financial-kingdom-network

networks:
  financial-kingdom-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  mongodb_data: